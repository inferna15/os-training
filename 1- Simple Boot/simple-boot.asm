;
; Basit bir boot edilebilir assembly kodu
; 
; Ön hazırlık olarak NASM ve QEMU araçlarını yüklemelisiniz.
; Benim kullandığım NASM versiyonu 2.16.01, QEMU versiyonu 8.2.2
; NASM assembler'ını kullanmak için "nasm -f bin simple-boot.asm -o simple-boot.bin" komutunu yazıyoruz
; QEMU ile binary dosyayı çalıştırmak için "qemu-system-x86_64 simple-boot.bin" komutunu yazıyoruz.
;

; Burada loop adında bir label oluşturuyoruz ki program sonsuz döngüye girebilsin ve kapanmasın.
loop:

    jmp loop


; db komutu define byte anlamına gelir ve belleğe verilen byte'ı yazar.
; times ise bir işlemin kaç kez yapılacağını belirtir.
; Bunu yapmamızın sebebi boot sector'ü 512 byte'tan oluşur.
; Boot edilebilir olması için de son 2 byte'ı "0xaa55" olmalıdır.
; Yani son iki byte'a gelene kadar 0'la doldurarak son 2 byte'ı atıyabiliyoruz.
;
; Buradaki "510-($-$$)" işlemini anlamak için ilk önce $ ve $$ ne manaya geliyor bilmeliyiz.
; $ şuanki konumu gösteriyor.
; $$ ise bu programın başlangıç adresini gösteriyor.
; 512 - 2("0xaa55") = 510
; Şuanki konum - Başlangıç konumu = Şuana kadar ki programın kapladığı yer.
; Sonuçta loop:
;              jmp loop
; bellekte bir yer kaplıyor.
; Aşağıdaki binary dosyasına baktığımızda gördüğümüz gibi bir sonuç elde etmemize yarıyor.
times 510-($-$$) db 0


; Boot edilebilir olması için sihirli sayımız.
; dw define word demektir.
; db 0x55, 0xaa 
; komutuda aynı işi görür.
dw 0xaa55


; Binary dosyası
;inferna@hp:~/Projects/os-training$ xxd simple-boot.bin 
;    00000000: ebfe 0000 0000 0000 0000 0000 0000 0000  ................
;    00000010: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000020: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000030: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000040: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000050: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000060: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000070: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000080: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000090: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000000a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000000b0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000000c0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000000d0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000000e0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000000f0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000100: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000110: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000120: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000130: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000140: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000150: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000160: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000170: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000180: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    00000190: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000001a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000001b0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000001c0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000001d0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000001e0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
;    000001f0: 0000 0000 0000 0000 0000 0000 0000 55aa  ..............U.